[paths]
# root folder name for the project (all rounds)
PROJECT_NOTE = dev_project

# ROUND_ID starts with 1
# if ROUND_ID > 1, program will seek input file from previous round
ROUND_ID = 1
#PREV_ROUND = 1
PROJECT_PATH = ../projects/${PROJECT_NOTE}

# folder to store untagged records from sampling module
SAMPLE_PATH = ${PROJECT_PATH}/round_${ROUND_ID}/sample
# folder to store tagged records from coders / coder simulators
LABEL_PATH = ${PROJECT_PATH}/round_${ROUND_ID}/label
# folder to aggregate all tagged records as input for modeling
INPUT_PATH = ${PROJECT_PATH}/round_${ROUND_ID}/input
# folder to store core ML module outputs
OUTPUT_PATH = ${PROJECT_PATH}/round_${ROUND_ID}/output

[data]
# standard formated source file to be sampled from
SCORED_FILE = ../output/stack_overflow_bs200_dl02_lr005_lstm128_fc256_glove/scored/scored_output.csv
#SCORED_FILE = ${paths:PROJECT_PATH}/round_${paths:PREV_ROUND}/output/scored/scored_output.csv
# name of this file should be static
SAMPLE_FILE = ${paths:SAMPLE_PATH}/text_tags.json


[sampling]
SAMPLE_SIZE = 40
# options: [clustering, random, LDA]
SAMPLING_METHOD = clustering

[coder_sim]
# ANSWER_FILE is the source file of all true answers
ANSWER_FILE = ../input/stack_overflow_test_10000_coded.json